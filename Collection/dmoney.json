{
	"info": {
		"_postman_id": "d58acf2c-b14a-464e-afe5-c1e3bfaf8ee6",
		"name": "dmoney-b7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27539856",
		"_collection_link": "https://red-moon-989163.postman.co/workspace/SDET~53031f8d-5245-4559-b3d2-f04bfe0c44d8/collection/27539856-d58acf2c-b14a-464e-afe5-c1e3bfaf8ee6?action=share&creator=27539856&source=collection_link"
	},
	"item": [
		{
			"name": "User Login",
			"item": [
				{
					"name": "User Login successfully if creds are correct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData= pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"pm.environment.set(\"token\",jsonData.token)\r",
									"pm.test(\"login is succesuccessful\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    console.log(message)\r",
									"    pm.expect(message).contains(\"Login successfully\")\r",
									"})\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"if role is showing\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var role = jsonData.role;\r",
									"    console.log(role)\r",
									"    pm.expect(jsonData.role).not.equal(null)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User can't Login successfully if creds are wrong",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"user can't login succesuccessfully if password is incorrect\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    console.log(message)\r",
									"    pm.expect(message).contains(\"Password incorrect\")\r",
									"})\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User List",
			"item": [
				{
					"name": "User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"If user data is showing\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var users = jsonData.users[0].id\r",
									"    var users1 = jsonData.users[0].phone_number\r",
									"    console.log(users)\r",
									"    console.log(users1)\r",
									"    pm.expect(jsonData.users[0].id).to.eql(1233);\r",
									"    pm.expect(jsonData.users[0].phone_number).contains(6909);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create New User",
			"item": [
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix= \"0175\";\r",
									"var nid_prefix= \"1100\";\r",
									"\r",
									"var randomNumber= _.random(1000000,9999999)\r",
									"var user_phone_number= prefix+randomNumber;\r",
									"var nid= nid_prefix+randomNumber;\r",
									"pm.collectionVariables.set(\"phone_number\",user_phone_number)\r",
									"pm.collectionVariables.set(\"nid\",nid)\r",
									"pm.environment.set(\"phone_number\",user_phone_number)\r",
									"pm.environment.set(\"nid\",nid)\r",
									"console.log(user_phone_number)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User Should Created Successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"userID\",jsonData.user.id)\r",
									"    pm.environment.set(\"userID\",jsonData.user.id)\r",
									"    pm.expect(jsonData.message).contains(\"User created\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User user can not created if email and ID is not change\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"already exists\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Woodrow Gutmann\",\r\n    \"email\": \"Ines.Waters41@yahoo.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"01757043656\",\r\n    \"nid\": \"11007043656\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix= \"0175\";\r",
									"var nid_prefix= \"1100\";\r",
									"\r",
									"var randomNumber= _.random(1000000,9999999)\r",
									"var user_phone_number= prefix+randomNumber;\r",
									"var nid= nid_prefix+randomNumber;\r",
									"pm.collectionVariables.set(\"phone_number\",user_phone_number)\r",
									"pm.collectionVariables.set(\"nid\",nid)\r",
									"console.log(user_phone_number)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Specific Data Of User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Should Found By User ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User found\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/search/id/{{userID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"search",
						"id",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete The User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Should Delete Successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"deleted successfully\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/user/delete/{{userID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"delete",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjg0ODc1NjE1LCJleHAiOjE2ODQ4Nzc0MTV9.-Sp-bkfNB_7sK3yNAlHBHcJFXMueMqczmm8z4TA6dUw"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "phone_number",
			"value": "01751140256"
		},
		{
			"key": "nid",
			"value": "11001140256"
		},
		{
			"key": "userID",
			"value": 12508
		}
	]
}